plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'yeonghwan.project'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation project(':spring-module-base')
	implementation project(':spring-module-security')

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Slf4J
	compileOnly 'org.slf4j:slf4j-api'

	// ModelMapper
	implementation 'org.modelmapper:modelmapper:3.1.0'

	// Commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

	// H2
	runtimeOnly 'com.h2database:h2'
	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 설정
def querydslDir = "$buildDir/main/generated/"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	if (file(querydslDir).exists())
		delete(file(querydslDir))
}